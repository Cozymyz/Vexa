<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.Vexa.mapper.Vuexmodule4Mapper">
  <resultMap id="BaseResultMap" type="org.Vexa.model.Vuexmodule4">
    <id column="User_Id" jdbcType="INTEGER" property="userId" />
    <result column="User_Name" jdbcType="VARCHAR" property="userName" />
    <result column="User_Password" jdbcType="VARCHAR" property="userPassword" />
    <result column="User_Introduce" jdbcType="VARCHAR" property="userIntroduce" />
  </resultMap>
    <select id="allUser" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vuexmodule4
    </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    User_Id, User_Name, User_Password, User_Introduce
  </sql>
  <select id="selectByExample" parameterType="org.Vexa.model.Vuexmodule4Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vuexmodule4
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vuexmodule4
    where User_Id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vuexmodule4
    where User_Id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.Vexa.model.Vuexmodule4Example">
    delete from vuexmodule4
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.Vexa.model.Vuexmodule4">
    insert into vuexmodule4 (User_Id, User_Name, User_Password, 
      User_Introduce)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userIntroduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.Vexa.model.Vuexmodule4">
    insert into vuexmodule4
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        User_Id,
      </if>
      <if test="userName != null">
        User_Name,
      </if>
      <if test="userPassword != null">
        User_Password,
      </if>
      <if test="userIntroduce != null">
        User_Introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userIntroduce != null">
        #{userIntroduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.Vexa.model.Vuexmodule4Example" resultType="java.lang.Long">
    select count(*) from vuexmodule4
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vuexmodule4
    <set>
      <if test="record.userId != null">
        User_Id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        User_Name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        User_Password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userIntroduce != null">
        User_Introduce = #{record.userIntroduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vuexmodule4
    set User_Id = #{record.userId,jdbcType=INTEGER},
      User_Name = #{record.userName,jdbcType=VARCHAR},
      User_Password = #{record.userPassword,jdbcType=VARCHAR},
      User_Introduce = #{record.userIntroduce,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.Vexa.model.Vuexmodule4">
    update vuexmodule4
    <set>
      <if test="userName != null">
        User_Name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        User_Password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userIntroduce != null">
        User_Introduce = #{userIntroduce,jdbcType=VARCHAR},
      </if>
    </set>
    where User_Id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.Vexa.model.Vuexmodule4">
    update vuexmodule4
    set User_Name = #{userName,jdbcType=VARCHAR},
      User_Password = #{userPassword,jdbcType=VARCHAR},
      User_Introduce = #{userIntroduce,jdbcType=VARCHAR}
    where User_Id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>